geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=0.5, color="black")+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
geom_line(data = spline_int, aes(x = x, y = y))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
geom_line(data = spline_int, aes(x = x, y = y))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
geom_line(data = spline_int, aes(x = x, y = y))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
coll$x <- spline_int$x
spline_int
coll
coll$temp_mod
spline(coll$Day
coll$Day
coll$Day
spline_int <- as.data.frame(spline(coll$Day, coll$temp_mod))
spline_int <- as.data.frame(spline(coll$Day, coll$temp_mod))
spline_int
# Create additional variable for modified temperature to scale with the preciptation y axis
# tranformation coefficient
coll$temp_mod <- (coll$Temp/5000)
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=0.5, color="black")+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=2, color="black")+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
0.5
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=0.5, color="black")+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
library(plotly)
plotly::ggplotly(
gggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=0.5, color="black")+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")   +
theme_bw()
)
plotly::ggplotly(
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=0.5, color="black")+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")   +
theme_bw()
)
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=0.5, color="black")+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=1, color="black")+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=1, color="black")+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+geom_smooth()+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=1, color="black")+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+ geom_smooth()+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=1, color="black")+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=1, color="black")+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=1, color="black")+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=1, color="black")+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=1, color="black")+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=1, color="black")+ geom_smooth(method = "lm", se = FALSE, linetype = "dashed") +
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=1, color="black")+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=1, color="black")+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+geom_smooth(size=2)+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=1, color="black")+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
coll <- data.frame(
Day = c(1,5,10,15,20,25,30),
Temp = c(7450, 12146.01, 18791.31, 23000, 19898.86,  16576.21, 15468.66            ),
Categories = c(rep("Patient number from clinical samples", 7, sep = ","), rep("Estimated patient number from wastewater", 7, sep = ",")),
value = c(1,2,5,6,6,4,3,4,6,8,7,6,5,4),
sd = c(1,2,5,6,6,4,3,4,6,8,7,6,5,4)/3)
# Create additional variable for modified temperature to scale with the preciptation y axis
# tranformation coefficient
coll$temp_mod <- (coll$Temp/5000)
ggplot(coll, aes(Day, value, fill = Categories))+
geom_bar(stat = "identity", position = "dodge")+
geom_errorbar(aes(ymin=value-sd, ymax=value+sd), width=1.2,
position=position_dodge(3.5))+
ylim(0, 25000)+
geom_line(aes(Day, temp_mod, colour = "Copy number/1000mL"),size=1, color="black")+
geom_point(aes(Day, temp_mod, colour = "Copy number/1000mL"))+
scale_y_continuous(sec.axis = sec_axis(~. *5000 , name = "Copy Number / 1000 ml"))  + labs(x = "Day", y = "Patient Number", colour = "") +  theme(text = element_text(size = 15),legend.position="bottom")
# # packages
library(MASS)
require(foreign)
require(ggplot2)
require(maptools)
library(dplyr)
setwd('E:\\WHOPAHO')
COVID <- read.csv("owid-covid-data.csv")
COVID<-COVID[(COVID$location=="Antigua and Barbuda" |
COVID$location=="Dominica" | COVID$location=="Panama" |
COVID$location=="Argentina" | COVID$location=="Dominican Republic" |
COVID$location=="Paraguay" | COVID$location=="Bahamas" |
COVID$location=="Ecuador" | COVID$location=="Peru" |
COVID$location=="Barbados" |  COVID$location=="El Salvador" |
COVID$location=="Saint Kitts and Nevis" |  COVID$location=="Belize" |
COVID$location=="Grenada" | COVID$location=="Saint Lucia" |
COVID$location=="Bolivia" | COVID$location=="Guatemala" |
COVID$location=="Saint Vincent and the Grenadines" | COVID$location=="Brazil" |
COVID$location=="Guyana" | COVID$location=="Suriname" |
COVID$location=="Canada" | COVID$location=="Haiti" |
COVID$location=="Trinidad and Tobago" | COVID$location=="Chile" |
COVID$location=="Honduras" | COVID$location=="United States" |
COVID$location=="Colombia" | COVID$location=="Jamaica" |
COVID$location=="Uruguay" |  COVID$location=="Costa Rica" |
COVID$location=="Mexico" |  COVID$location=="Venezuela" |
COVID$location=="Cuba" | COVID$location=="Nicaragua"),]
Day <- read.csv("Day.csv")
GHSI <- read.csv("GHSI.csv")
JEE_All3 <- read.csv("JEE_All3.csv")
WGI <- read.csv("WGI.csv")
finaldt1 <- merge(Day, GHSI,  by="location")
finaldt2 <- merge(JEE_All3, WGI,  by="location")
finaldt3 <- merge(finaldt1, finaldt2,  by="location")
finaldt <- merge(COVID, finaldt3,  by="location")
finaldt$GHSI[finaldt$GHSI == 0] <- NA
finaldt$WGI[finaldt$WGI == 0] <- NA
finaldt$RS[finaldt$RS == 0] <- NA
finaldt$total_deaths_per_million[is.na(finaldt$total_deaths_per_million)] <- 0
finaldt$date
finaldt_Dec20 <- subset(finaldt, finaldt$date == "2020-12-31")
finaldt_Dec20$total_deaths_per_million
finaldt_Dec20$GHSI
finaldt_Dec20$RS
finaldt_Dec20$location
finaldt_Dec20$total_deaths_per_million
finaldt_Dec20$GHSI
finaldt_Dec20$RS
finaldt_Dec20$location
model.3nb <- glm.nb(total_deaths_per_million ~ GHSI + total_cases_per_million + aged_65_older + WGI +
gdp_per_capita + population_density +
offset(log(DayDec20)), data = finaldt_Dec20)
summary(model.3nb)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
#2022 CFR
setwd('E:\\Update3')
#Creating CFR
finaldt_Dec20$CFR_Dec20 <- (finaldt_Dec20$total_deaths/finaldt_Dec20$total_cases)*100
finaldt_Dec20$CFR_Dec20
t.test(finaldt_Dec20$CFR_Dec20)
t.test(finaldt_Dec20$total_vaccinations_per_hundred)
t.test(finaldt_Dec20$CFR_Dec20)
model.3nb <- glm.nb(total_deaths_per_million ~ GHSI + total_cases_per_million + aged_65_older + WGI +
gdp_per_capita + population_density +
offset(log(DayDec20)), data = finaldt_Dec20)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
# install.packages("ggplot2")
library(ggplot2)
finaldt_Dec20 <- finaldt_Dec20 %>%
mutate(location2 = case_when(location == "Argentina" ~ 'Argentina',
location == "Brazil" ~ 'Brazil',
location == "Canada" ~ 'Canada',
location == "Chile" ~ 'Chile',
location == "Colombia" ~ 'Colombia',
location == "Costa Rica" ~ 'Costa Rica',
location == "Ecuador" ~ 'Ecuador',
location == "El Salvador" ~ 'El Salvador',
location == "Mexico" ~ 'Mexico',
location == "Peru" ~ 'Peru',
location == "United States" ~ 'United States'))
a <- ggplot(finaldt_Dec20, aes(x = GHSI, y = total_deaths_per_million)) + ggtitle("December 31, 2020") +
theme(plot.title = element_text(hjust = 0.5,size=20,face = "bold"),text = element_text(size = 20)) +
geom_point(aes(colour = GHSI > 44 & GHSI < 84), size = 4,
show.legend = F) +
#geom_vline(xintercept = 44.2, linetype = "dashed") +
#geom_vline(xintercept = 83.5, linetype = "dashed") +
geom_text_repel(aes(colour = GHSI > 44 & GHSI < 84),
show.legend = F,
size = 8,
label=finaldt_Dec20$location2,
hjust = -0.5,
vjust= 0.1)+
xlab("") + ylab("Total Deaths per million") +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 3000))
a
setwd('E:\\WHOPAHO')
COVID <- read.csv("owid-covid-data.csv")
COVID<-COVID[(COVID$location=="Antigua and Barbuda" |
COVID$location=="Dominica" | COVID$location=="Panama" |
COVID$location=="Argentina" | COVID$location=="Dominican Republic" |
COVID$location=="Paraguay" | COVID$location=="Bahamas" |
COVID$location=="Ecuador" | COVID$location=="Peru" |
COVID$location=="Barbados" |  COVID$location=="El Salvador" |
COVID$location=="Saint Kitts and Nevis" |  COVID$location=="Belize" |
COVID$location=="Grenada" | COVID$location=="Saint Lucia" |
COVID$location=="Bolivia" | COVID$location=="Guatemala" |
COVID$location=="Saint Vincent and the Grenadines" | COVID$location=="Brazil" |
COVID$location=="Guyana" | COVID$location=="Suriname" |
COVID$location=="Canada" | COVID$location=="Haiti" |
COVID$location=="Trinidad and Tobago" | COVID$location=="Chile" |
COVID$location=="Honduras" | COVID$location=="United States" |
COVID$location=="Colombia" | COVID$location=="Jamaica" |
COVID$location=="Uruguay" |  COVID$location=="Costa Rica" |
COVID$location=="Mexico" |  COVID$location=="Venezuela" |
COVID$location=="Cuba" | COVID$location=="Nicaragua"),]
Day <- read.csv("Day.csv")
GHSI <- read.csv("GHSI.csv")
JEE_All3 <- read.csv("JEE_All3.csv")
WGI <- read.csv("WGI.csv")
finaldt1 <- merge(Day, GHSI,  by="location")
finaldt2 <- merge(JEE_All3, WGI,  by="location")
finaldt3 <- merge(finaldt1, finaldt2,  by="location")
finaldt <- merge(COVID, finaldt3,  by="location")
finaldt$GHSI[finaldt$GHSI == 0] <- NA
finaldt$WGI[finaldt$WGI == 0] <- NA
finaldt$RS[finaldt$RS == 0] <- NA
finaldt$total_deaths_per_million[is.na(finaldt$total_deaths_per_million)] <- 0
finaldt$date
finaldt_Jun21 <- subset(finaldt, finaldt$date == "2021-06-30")
finaldt_Jun21$total_deaths_per_million
finaldt_Jun21$GHSI
#Creating CFR
finaldt_Jun21$CFR_Jun21 <- (finaldt_Jun21$total_deaths/finaldt_Jun21$total_cases)*100
t.test(finaldt_Jun21$total_vaccinations_per_hundred)
#Creating CFR
finaldt_Jun21$CFR_Jun21 <- (finaldt_Jun21$total_deaths/finaldt_Jun21$total_cases)*100
t.test(finaldt_Jun21$CFR_Jun21)
model.3nb <- glm.nb(total_deaths_per_million ~ GHSI + total_cases_per_million + aged_65_older + WGI +
gdp_per_capita + population_density +
offset(log(DayJun21)), data = finaldt_Jun21)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
# install.packages("ggplot2")
library(ggplot2)
finaldt_Jun21 <- finaldt_Jun21 %>%
mutate(location2 = case_when(location == "Argentina" ~ 'Argentina',
location == "Brazil" ~ 'Brazil',
location == "Canada" ~ 'Canada',
location == "Chile" ~ 'Chile',
location == "Colombia" ~ 'Colombia',
location == "Costa Rica" ~ 'Costa Rica',
location == "Ecuador" ~ 'Ecuador',
location == "El Salvador" ~ 'El Salvador',
location == "Mexico" ~ 'Mexico',
location == "Peru" ~ 'Peru',
location == "United States" ~ 'United States'))
b <- ggplot(finaldt_Jun21, aes(x = GHSI, y = total_deaths_per_million)) + ggtitle("June 30, 2021") +
theme(plot.title = element_text(hjust = 0.5,size=20,face = "bold"),text = element_text(size = 20))+
geom_point(aes(colour = GHSI > 44 & GHSI < 84), size = 4,
show.legend = F) +
#geom_vline(xintercept = 44.2, linetype = "dashed") +
#geom_vline(xintercept = 83.5, linetype = "dashed") +
geom_text_repel(aes(colour = GHSI > 44 & GHSI < 84),
show.legend = F,
size = 8,
label=finaldt_Jun21$location2,
hjust = -0.2,
vjust= 0.5) +
xlab("") + ylab("Total Deaths per million") +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 3000))
b
setwd('E:\\WHOPAHO')
COVID <- read.csv("owid-covid-data.csv")
COVID<-COVID[(COVID$location=="Antigua and Barbuda" |
COVID$location=="Dominica" | COVID$location=="Panama" |
COVID$location=="Argentina" | COVID$location=="Dominican Republic" |
COVID$location=="Paraguay" | COVID$location=="Bahamas" |
COVID$location=="Ecuador" | COVID$location=="Peru" |
COVID$location=="Barbados" |  COVID$location=="El Salvador" |
COVID$location=="Saint Kitts and Nevis" |  COVID$location=="Belize" |
COVID$location=="Grenada" | COVID$location=="Saint Lucia" |
COVID$location=="Bolivia" | COVID$location=="Guatemala" |
COVID$location=="Saint Vincent and the Grenadines" | COVID$location=="Brazil" |
COVID$location=="Guyana" | COVID$location=="Suriname" |
COVID$location=="Canada" | COVID$location=="Haiti" |
COVID$location=="Trinidad and Tobago" | COVID$location=="Chile" |
COVID$location=="Honduras" | COVID$location=="United States" |
COVID$location=="Colombia" | COVID$location=="Jamaica" |
COVID$location=="Uruguay" |  COVID$location=="Costa Rica" |
COVID$location=="Mexico" |  COVID$location=="Venezuela" |
COVID$location=="Cuba" | COVID$location=="Nicaragua"),]
Day <- read.csv("Day.csv")
GHSI <- read.csv("GHSI.csv")
JEE_All3 <- read.csv("JEE_All3.csv")
WGI <- read.csv("WGI.csv")
finaldt1 <- merge(Day, GHSI,  by="location")
finaldt2 <- merge(JEE_All3, WGI,  by="location")
finaldt3 <- merge(finaldt1, finaldt2,  by="location")
finaldt <- merge(COVID, finaldt3,  by="location")
finaldt$GHSI[finaldt$GHSI == 0] <- NA
finaldt$WGI[finaldt$WGI == 0] <- NA
finaldt$RS[finaldt$RS == 0] <- NA
finaldt$total_deaths_per_million[is.na(finaldt$total_deaths_per_million)] <- 0
finaldt$date
finaldt_Dec21 <- subset(finaldt, finaldt$date == "2021-12-31")
finaldt_Dec21$total_deaths_per_million
finaldt_Dec21$GHSI
#Creating CFR
finaldt_Dec21$CFR_Dec21 <- (finaldt_Dec21$total_deaths/finaldt_Dec21$total_cases)*100
t.test(finaldt_Dec21$CFR_Dec21)
t.test(finaldt_Dec21$CFR_Dec21)
model.3nb <- glm.nb(total_deaths_per_million ~ GHSI + total_cases_per_million + aged_65_older + WGI +
gdp_per_capita + population_density +
offset(log(DayDec21)), data = finaldt_Dec21)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
# install.packages("ggplot2")
library(ggplot2)
finaldt_Dec21 <- finaldt_Dec21 %>%
mutate(location2 = case_when(location == "Argentina" ~ 'Argentina',
location == "Brazil" ~ 'Brazil',
location == "Canada" ~ 'Canada',
location == "Chile" ~ 'Chile',
location == "Colombia" ~ 'Colombia',
location == "Costa Rica" ~ 'Costa Rica',
location == "Ecuador" ~ 'Ecuador',
location == "El Salvador" ~ 'El Salvador',
location == "Mexico" ~ 'Mexico',
location == "Peru" ~ 'Peru',
location == "United States" ~ 'United States'))
c <- ggplot(finaldt_Dec21, aes(x = GHSI, y = total_deaths_per_million)) + ggtitle("December 31, 2021") +
theme(plot.title = element_text(hjust = 0.5,size=20,face = "bold"),text = element_text(size = 20))+
geom_point(aes(colour = GHSI > 44 & GHSI < 84), size = 4,
show.legend = F) +
#geom_vline(xintercept = 44.2, linetype = "dashed") +
#geom_vline(xintercept = 83.5, linetype = "dashed") +
geom_text_repel(aes(colour = GHSI > 44 & GHSI < 84),
show.legend = F,
size = 8,
label=finaldt_Dec21$location2,
hjust = -0.3,
vjust= 0.4) +
xlab("Global Health Security Index") + ylab("Total Deaths per million") +
scale_x_continuous(limits = c(0, 100)) +
scale_y_continuous(limits = c(0, 3000))
c
setwd('E:\\WHOPAHO')
COVID <- read.csv("owid-covid-data.csv")
COVID<-COVID[(COVID$location=="Antigua and Barbuda" |
COVID$location=="Dominica" | COVID$location=="Panama" |
COVID$location=="Argentina" | COVID$location=="Dominican Republic" |
COVID$location=="Paraguay" | COVID$location=="Bahamas" |
COVID$location=="Ecuador" | COVID$location=="Peru" |
COVID$location=="Barbados" |  COVID$location=="El Salvador" |
COVID$location=="Saint Kitts and Nevis" |  COVID$location=="Belize" |
COVID$location=="Grenada" | COVID$location=="Saint Lucia" |
COVID$location=="Bolivia" | COVID$location=="Guatemala" |
COVID$location=="Saint Vincent and the Grenadines" | COVID$location=="Brazil" |
COVID$location=="Guyana" | COVID$location=="Suriname" |
COVID$location=="Canada" | COVID$location=="Haiti" |
COVID$location=="Trinidad and Tobago" | COVID$location=="Chile" |
COVID$location=="Honduras" | COVID$location=="United States" |
COVID$location=="Colombia" | COVID$location=="Jamaica" |
COVID$location=="Uruguay" |  COVID$location=="Costa Rica" |
COVID$location=="Mexico" |  COVID$location=="Venezuela" |
COVID$location=="Cuba" | COVID$location=="Nicaragua"),]
Day <- read.csv("Day.csv")
GHSI <- read.csv("GHSI.csv")
JEE_All3 <- read.csv("JEE_All3.csv")
WGI <- read.csv("WGI.csv")
finaldt1 <- merge(Day, GHSI,  by="location")
finaldt2 <- merge(JEE_All3, WGI,  by="location")
finaldt3 <- merge(finaldt1, finaldt2,  by="location")
finaldt <- merge(COVID, finaldt3,  by="location")
finaldt$GHSI[finaldt$GHSI == 0] <- NA
finaldt$WGI[finaldt$WGI == 0] <- NA
finaldt$RS[finaldt$RS == 0] <- NA
finaldt$total_deaths_per_million[is.na(finaldt$total_deaths_per_million)] <- 0
finaldt$date
finaldt_Jul22 <- subset(finaldt, finaldt$date == "2022-07-31")
finaldt_Jul22$total_deaths_per_million
finaldt_Jul22$GHSI
#Creating CFR
finaldt_Jul22$CFR_Jul22 <- (finaldt_Jul22$total_deaths/finaldt_Jul22$total_cases)*100
t.test(finaldt_Jul22$CFR_Jul22)
model.3nb <- glm.nb(total_deaths_per_million ~ GHSI + total_cases_per_million + aged_65_older + WGI +
gdp_per_capita + population_density +
offset(log(DayJul22)), data = finaldt_Jul22)
summary(model.3nb)
summary(model.3nb)
exp(model.3nb$coefficients)
exp(confint(model.3nb))
t.test(finaldt_Dec20$CFR_Dec20, finaldt_Jul22$CFR_Jul22, paired = TRUE, alternative = "two.sided")
